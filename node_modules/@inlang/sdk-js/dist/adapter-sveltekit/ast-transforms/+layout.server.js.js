import { assertNoImportsFromSdkJs } from "../../ast-transforms/assertions.js";
import { addImport, isOptOutImportPresent } from "../../ast-transforms/utils/imports.js";
import { wrapExportedFunction } from "../../ast-transforms/utils/wrap.js";
import { codeToSourceFile, nodeToCode } from "../../ast-transforms/utils/js.util.js";
import { filePathForOutput } from "../vite-plugin/fileInformation.js";
export const transformLayoutServerJs = (filePath, config, code, root) => {
    const sourceFile = codeToSourceFile(code, filePath);
    if (isOptOutImportPresent(sourceFile))
        return code;
    assertNoImportsFromSdkJs(sourceFile, filePathForOutput(config, filePath), "+layout.server.js", root); // TODO: implement functionality
    if (!root)
        return code; // for now we don't need to transform non-root files
    const wrapperFunctionName = root ? "initRootLayoutServerLoadWrapper" : "initServerLoadWrapper";
    addImport(sourceFile, "@inlang/sdk-js/adapter-sveltekit/server", wrapperFunctionName);
    wrapExportedFunction(sourceFile, undefined, wrapperFunctionName, "load");
    return nodeToCode(sourceFile);
};
